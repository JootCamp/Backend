# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: jootCamp Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set environment variable for Jasypt password
      run: echo "JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}" >> $GITHUB_ENV

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      working-directory: .
      shell: bash

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      
    # - name: Build with test profile
    #   run: ./gradlew test -Dspring.profiles.active=test -Djasypt.encryptor.password=${{secrets.JASYPT_ENCRYPTOR_PASSWORD}}

    - name: Build without tests (production profile)
      run: ./gradlew build -x test


    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: ${{ secrets.AWS_REGION }} 

    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        source: "build/libs/superboard-0.0.1-SNAPSHOT.jar"
        target: "/home/ubuntu/jootCamp"
        timeout: 120s
        
  deploy:
    needs: build #deploy를 실행시킬 선행조건
    name: deploy
    runs-on: ubuntu-latest 

    # ssh에 접속하여 script 실행
    steps:
      - name: Execute commands on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          username: ${{ secrets.EC2_USERNAME }}
          port: ${{ secrets.EC2_PORT }}
          script: |  
            ps -ef | grep java || awk '{print $2}' | xargs kill -9
            nohup java -jar /home/ubuntu/jootCamp/build/libs/superboard-0.0.1-SNAPSHOT.jar --JASYPT_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }} --spring.profiles.active=prod &
